匹配单个字符
元字符	描述
.	匹配除换行符以外的任意单个字符
\d	匹配任意一个数字字符，等价于 [0-9]
\D	匹配任意一个非数字字符，等价于 [^0-9]
\w	匹配任意一个字母、数字或下划线字符，等价于 [a-zA-Z0-9_]
\W	匹配任意一个非字母、数字或下划线字符，等价于 [^a-zA-Z0-9_]
\s	匹配任意一个空白字符，包括空格、制表符、换页符等，等价于 [ \t\n\r\f\v]
\S	匹配任意一个非空白字符，等价于 [^ \t\n\r\f\v]

匹配多个字符
元字符	描述
*	匹配前面的子表达式零次或多次
+	匹配前面的子表达式一次或多次
?	匹配前面的子表达式零次或一次
{n}	匹配前面的子表达式恰好 n 次
{n,}	匹配前面的子表达式至少 n 次
{n,m}	匹配前面的子表达式至少 n 次，至多 m 次

边界匹配
元字符	描述
^	匹配字符串的开始位置
$	匹配字符串的结束位置

分组和引用
元字符	描述
()	用于分组，将多个字符当作一个整体处理，还可用于后续引用

或匹配
元字符	描述		
`	`	表示或的关系，匹配 `	` 两边任意一个子表达式

贪婪匹配和惰性匹配
元字符	描述
.*	匹配前面的子表达式零次或多次，贪婪匹配，尽可能匹配多的字符
.*?	匹配前面的子表达式零次或多次，惰性匹配，尽可能匹配少的字符


文本模式（默认模式）
'r'：只读模式，文件必须存在。
'w'：写入模式，会覆盖原文件内容。
'a'：追加模式，在文件末尾添加内容。
'x'：创建新文件并写入，如果文件已存在则会报错。
还可以和 '+' 组合使用：
'r+'：读写模式。
'w+'：读写模式，会先清空文件内容。
'a+'：读写模式，从文件末尾开始追加或读取。
二进制模式（需添加 'b'）
'rb'：二进制只读模式。
'wb'：二进制写入模式。
'ab'：二进制追加模式。
'xb'：创建新的二进制文件并写入。
同样能和 '+' 组合：
'rb+'：二进制读写模式。
'wb+'：二进制读写模式，会先清空文件内容。
'ab+'：二进制读写模式，从文件末尾开始操作。